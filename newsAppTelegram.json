{
  "name": "Daily AI News Digest - Arabic AI Priority (Ollama Fixed)",
  "nodes": [
    {
      "parameters": {
        "cronExpression": "0 6 * * *",
        "timeZone": "UTC"
      },
      "id": "1",
      "name": "Schedule Trigger (daily @ 06:00 UTC)",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "url": "https://techcrunch.com/tag/artificial-intelligence/feed/"
      },
      "id": "2",
      "name": "RSS - TechCrunch AI",
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1,
      "position": [500, 200]
    },
    {
      "parameters": {
        "mode": "append"
      },
      "id": "3",
      "name": "Merge RSS outputs",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "propertyName": "link"
      },
      "id": "4",
      "name": "Deduplicate (by URL) & Normalize",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [1100, 300]
    },
    {
      "parameters": {
        "url": "={{$json[\"link\"]}}",
        "responseFormat": "string"
      },
      "id": "5",
      "name": "HTTP Request - Fetch Article HTML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1400, 300]
    },
    {
      "parameters": {
        "extractionValues": {
          "values": [
            {
              "key": "content_text",
              "cssSelector": "article"
            },
            {
              "key": "og_image",
              "cssSelector": "meta[property='og:image']",
              "returnValue": "attribute",
              "attribute": "content"
            }
          ]
        },
        "options": {}
      },
      "id": "6",
      "name": "HTML Extract - main content & og:image",
      "type": "n8n-nodes-base.htmlExtract",
      "typeVersion": 1,
      "position": [1700, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "number": [
            {
              "value1": "={{$json[\"content_text\"].split(\" \").length}}",
              "operation": "larger",
              "value2": 150
            }
          ]
        }
      },
      "id": "7",
      "name": "Filter Short Articles (>150 words)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [2000, 300]
    },
    {
      "parameters": {
        "url": "http://192.168.30.250:11434/api/generate",
        "method": "POST",
        "responseFormat": "json",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"model\": \"llama3.1:8b\",\n  \"prompt\": \"You are an AI news assistant. Given an article, return ONLY a valid JSON object with these keys:\\n- english_summary: 3-4 sentence professional English summary.\\n- arabic_summary: 3-4 sentence professional Modern Standard Arabic summary.\\n- relevance_score_arabic_ai: integer 1-10 (10 = direct Arabic AI breakthrough).\\n- keywords: array of up to 6 keywords (Arabic/English).\\n- category: one of ['LLM Development','AI Application','AI Research','Market News','Arabic AI Breakthrough'].\\n\\nInput:\\nLink: {{$json.link}}\\nText: {{$json.content_text}}\\n\\nOutput JSON only.\"\n}"
      },
      "id": "8",
      "name": "Ollama - Summarize & Classify",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2300, 300]
    },
    {
      "parameters": {
        "fieldToAggregate": "data",
        "operation": "merge"
      },
      "id": "9",
      "name": "Aggregate Enriched Articles",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 2,
      "position": [2600, 300]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: {\n  digest: items.map(i => i.json).map(article =>\n    `📰 ${article.english_summary}\\n\\n🇸🇦 ${article.arabic_summary}\\n\\n📊 Score: ${article.relevance_score_arabic_ai}\\n🏷️ ${article.keywords.join(', ')}\\n📂 ${article.category}\\n🔗 ${article.link}\\n\\n---`\n  ).join('\\n') }}];"
      },
      "id": "10",
      "name": "Compile Digest",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [2900, 300]
    },
    {
      "parameters": {
        "chatId": "123456789",
        "text": "={{$json[\"digest\"]}}",
        "additionalFields": {}
      },
      "id": "11",
      "name": "Telegram - Send Digest",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [3200, 200],
      "credentials": {
        "telegramApi": "AINewsDigest2bot"
      }
    },
    {
      "parameters": {
        "from": "14155238886",
        "to": "971XXXXXXXXX",
        "message": "={{$json[\"digest\"]}}"
      },
      "id": "12",
      "name": "WhatsApp - Send Digest",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [3200, 400],
      "credentials": {
        "twilioApi": "Twilio Account"
      }
    }
  ],
  "connections": {
    "Schedule Trigger (daily @ 06:00 UTC)": {
      "main": [[{ "node": "RSS - TechCrunch AI", "type": "main", "index": 0 }]]
    },
    "RSS - TechCrunch AI": {
      "main": [[{ "node": "Merge RSS outputs", "type": "main", "index": 0 }]]
    },
    "Merge RSS outputs": {
      "main": [[{ "node": "Deduplicate (by URL) & Normalize", "type": "main", "index": 0 }]]
    },
    "Deduplicate (by URL) & Normalize": {
      "main": [[{ "node": "HTTP Request - Fetch Article HTML", "type": "main", "index": 0 }]]
    },
    "HTTP Request - Fetch Article HTML": {
      "main": [[{ "node": "HTML Extract - main content & og:image", "type": "main", "index": 0 }]]
    },
    "HTML Extract - main content & og:image": {
      "main": [[{ "node": "Filter Short Articles (>150 words)", "type": "main", "index": 0 }]]
    },
    "Filter Short Articles (>150 words)": {
      "main": [[{ "node": "Ollama - Summarize & Classify", "type": "main", "index": 0 }]]
    },
    "Ollama - Summarize & Classify": {
      "main": [[{ "node": "Aggregate Enriched Articles", "type": "main", "index": 0 }]]
    },
    "Aggregate Enriched Articles": {
      "main": [[{ "node": "Compile Digest", "type": "main", "index": 0 }]]
    },
    "Compile Digest": {
      "main": [
        [{ "node": "Telegram - Send Digest", "type": "main", "index": 0 }],
        [{ "node": "WhatsApp - Send Digest", "type": "main", "index": 0 }]
      ]
    }
  }
}
